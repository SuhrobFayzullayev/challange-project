{"version":3,"file":"index.module.js","sources":["../src/helpers.ts","../src/Cropper.tsx"],"sourcesContent":["import { Area, MediaSize, Point, Size } from './types'\n\n/**\n * Compute the dimension of the crop area based on media size,\n * aspect ratio and optionally rotation\n */\nexport function getCropSize(\n  mediaWidth: number,\n  mediaHeight: number,\n  containerWidth: number,\n  containerHeight: number,\n  aspect: number,\n  rotation = 0\n): Size {\n  const { width, height } = rotateSize(mediaWidth, mediaHeight, rotation)\n  const fittingWidth = Math.min(width, containerWidth)\n  const fittingHeight = Math.min(height, containerHeight)\n\n  if (fittingWidth > fittingHeight * aspect) {\n    return {\n      width: fittingHeight * aspect,\n      height: fittingHeight,\n    }\n  }\n\n  return {\n    width: fittingWidth,\n    height: fittingWidth / aspect,\n  }\n}\n\n/**\n * Compute media zoom.\n * We fit the media into the container with \"max-width: 100%; max-height: 100%;\"\n */\nexport function getMediaZoom(mediaSize: MediaSize) {\n  // Take the axis with more pixels to improve accuracy\n  return mediaSize.width > mediaSize.height\n    ? mediaSize.width / mediaSize.naturalWidth\n    : mediaSize.height / mediaSize.naturalHeight\n}\n\n/**\n * Ensure a new media position stays in the crop area.\n */\nexport function restrictPosition(\n  position: Point,\n  mediaSize: Size,\n  cropSize: Size,\n  zoom: number,\n  rotation = 0\n): Point {\n  const { width, height } = rotateSize(mediaSize.width, mediaSize.height, rotation)\n\n  return {\n    x: restrictPositionCoord(position.x, width, cropSize.width, zoom),\n    y: restrictPositionCoord(position.y, height, cropSize.height, zoom),\n  }\n}\n\nfunction restrictPositionCoord(\n  position: number,\n  mediaSize: number,\n  cropSize: number,\n  zoom: number\n): number {\n  const maxPosition = (mediaSize * zoom) / 2 - cropSize / 2\n\n  return clamp(position, -maxPosition, maxPosition)\n}\n\nexport function getDistanceBetweenPoints(pointA: Point, pointB: Point) {\n  return Math.sqrt(Math.pow(pointA.y - pointB.y, 2) + Math.pow(pointA.x - pointB.x, 2))\n}\n\nexport function getRotationBetweenPoints(pointA: Point, pointB: Point) {\n  return (Math.atan2(pointB.y - pointA.y, pointB.x - pointA.x) * 180) / Math.PI\n}\n\n/**\n * Compute the output cropped area of the media in percentages and pixels.\n * x/y are the top-left coordinates on the src media\n */\nexport function computeCroppedArea(\n  crop: Point,\n  mediaSize: MediaSize,\n  cropSize: Size,\n  aspect: number,\n  zoom: number,\n  rotation = 0,\n  restrictPosition = true\n): { croppedAreaPercentages: Area; croppedAreaPixels: Area } {\n  // if the media is rotated by the user, we cannot limit the position anymore\n  // as it might need to be negative.\n  const limitAreaFn = restrictPosition ? limitArea : noOp\n\n  const mediaBBoxSize = rotateSize(mediaSize.width, mediaSize.height, rotation)\n  const mediaNaturalBBoxSize = rotateSize(mediaSize.naturalWidth, mediaSize.naturalHeight, rotation)\n\n  // calculate the crop area in percentages\n  // in the rotated space\n  const croppedAreaPercentages = {\n    x: limitAreaFn(\n      100,\n      (((mediaBBoxSize.width - cropSize.width / zoom) / 2 - crop.x / zoom) / mediaBBoxSize.width) *\n        100\n    ),\n    y: limitAreaFn(\n      100,\n      (((mediaBBoxSize.height - cropSize.height / zoom) / 2 - crop.y / zoom) /\n        mediaBBoxSize.height) *\n        100\n    ),\n    width: limitAreaFn(100, ((cropSize.width / mediaBBoxSize.width) * 100) / zoom),\n    height: limitAreaFn(100, ((cropSize.height / mediaBBoxSize.height) * 100) / zoom),\n  }\n\n  // we compute the pixels size naively\n  const widthInPixels = Math.round(\n    limitAreaFn(\n      mediaNaturalBBoxSize.width,\n      (croppedAreaPercentages.width * mediaNaturalBBoxSize.width) / 100\n    )\n  )\n  const heightInPixels = Math.round(\n    limitAreaFn(\n      mediaNaturalBBoxSize.height,\n      (croppedAreaPercentages.height * mediaNaturalBBoxSize.height) / 100\n    )\n  )\n  const isImgWiderThanHigh = mediaNaturalBBoxSize.width >= mediaNaturalBBoxSize.height * aspect\n\n  // then we ensure the width and height exactly match the aspect (to avoid rounding approximations)\n  // if the media is wider than high, when zoom is 0, the crop height will be equals to image height\n  // thus we want to compute the width from the height and aspect for accuracy.\n  // Otherwise, we compute the height from width and aspect.\n  const sizePixels = isImgWiderThanHigh\n    ? {\n        width: Math.round(heightInPixels * aspect),\n        height: heightInPixels,\n      }\n    : {\n        width: widthInPixels,\n        height: Math.round(widthInPixels / aspect),\n      }\n\n  const croppedAreaPixels = {\n    ...sizePixels,\n    x: Math.round(\n      limitAreaFn(\n        mediaNaturalBBoxSize.width - sizePixels.width,\n        (croppedAreaPercentages.x * mediaNaturalBBoxSize.width) / 100\n      )\n    ),\n    y: Math.round(\n      limitAreaFn(\n        mediaNaturalBBoxSize.height - sizePixels.height,\n        (croppedAreaPercentages.y * mediaNaturalBBoxSize.height) / 100\n      )\n    ),\n  }\n\n  return { croppedAreaPercentages, croppedAreaPixels }\n}\n\n/**\n * Ensure the returned value is between 0 and max\n */\nfunction limitArea(max: number, value: number): number {\n  return Math.min(max, Math.max(0, value))\n}\n\nfunction noOp(_max: number, value: number) {\n  return value\n}\n\n/**\n * Compute crop and zoom from the croppedAreaPercentages.\n */\nexport function getInitialCropFromCroppedAreaPercentages(\n  croppedAreaPercentages: Area,\n  mediaSize: MediaSize,\n  rotation: number,\n  cropSize: Size,\n  minZoom: number,\n  maxZoom: number\n) {\n  const mediaBBoxSize = rotateSize(mediaSize.width, mediaSize.height, rotation)\n\n  // This is the inverse process of computeCroppedArea\n  const zoom = clamp(\n    (cropSize.width / mediaBBoxSize.width) * (100 / croppedAreaPercentages.width),\n    minZoom,\n    maxZoom\n  )\n\n  const crop = {\n    x:\n      (zoom * mediaBBoxSize.width) / 2 -\n      cropSize.width / 2 -\n      mediaBBoxSize.width * zoom * (croppedAreaPercentages.x / 100),\n    y:\n      (zoom * mediaBBoxSize.height) / 2 -\n      cropSize.height / 2 -\n      mediaBBoxSize.height * zoom * (croppedAreaPercentages.y / 100),\n  }\n\n  return { crop, zoom }\n}\n\n/**\n * Compute zoom from the croppedAreaPixels\n */\nfunction getZoomFromCroppedAreaPixels(\n  croppedAreaPixels: Area,\n  mediaSize: MediaSize,\n  cropSize: Size\n): number {\n  const mediaZoom = getMediaZoom(mediaSize)\n\n  return cropSize.height > cropSize.width\n    ? cropSize.height / (croppedAreaPixels.height * mediaZoom)\n    : cropSize.width / (croppedAreaPixels.width * mediaZoom)\n}\n\n/**\n * Compute crop and zoom from the croppedAreaPixels\n */\nexport function getInitialCropFromCroppedAreaPixels(\n  croppedAreaPixels: Area,\n  mediaSize: MediaSize,\n  rotation = 0,\n  cropSize: Size,\n  minZoom: number,\n  maxZoom: number\n): { crop: Point; zoom: number } {\n  const mediaNaturalBBoxSize = rotateSize(mediaSize.naturalWidth, mediaSize.naturalHeight, rotation)\n\n  const zoom = clamp(\n    getZoomFromCroppedAreaPixels(croppedAreaPixels, mediaSize, cropSize),\n    minZoom,\n    maxZoom\n  )\n\n  const cropZoom =\n    cropSize.height > cropSize.width\n      ? cropSize.height / croppedAreaPixels.height\n      : cropSize.width / croppedAreaPixels.width\n\n  const crop = {\n    x:\n      ((mediaNaturalBBoxSize.width - croppedAreaPixels.width) / 2 - croppedAreaPixels.x) * cropZoom,\n    y:\n      ((mediaNaturalBBoxSize.height - croppedAreaPixels.height) / 2 - croppedAreaPixels.y) *\n      cropZoom,\n  }\n  return { crop, zoom }\n}\n\n/**\n * Return the point that is the center of point a and b\n */\nexport function getCenter(a: Point, b: Point): Point {\n  return {\n    x: (b.x + a.x) / 2,\n    y: (b.y + a.y) / 2,\n  }\n}\n\nexport function getRadianAngle(degreeValue: number) {\n  return (degreeValue * Math.PI) / 180\n}\n\n/**\n * Returns the new bounding area of a rotated rectangle.\n */\nexport function rotateSize(width: number, height: number, rotation: number): Size {\n  const rotRad = getRadianAngle(rotation)\n\n  return {\n    width: Math.abs(Math.cos(rotRad) * width) + Math.abs(Math.sin(rotRad) * height),\n    height: Math.abs(Math.sin(rotRad) * width) + Math.abs(Math.cos(rotRad) * height),\n  }\n}\n\n/**\n * Clamp value between min and max\n */\nexport function clamp(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, min), max)\n}\n\n/**\n * Combine multiple class names into a single string.\n */\nexport function classNames(...args: (boolean | string | number | undefined | void | null)[]) {\n  return args\n    .filter((value) => {\n      if (typeof value === 'string' && value.length > 0) {\n        return true\n      }\n\n      return false\n    })\n    .join(' ')\n    .trim()\n}\n","import React from 'react'\nimport normalizeWheel from 'normalize-wheel'\nimport { Area, MediaSize, Point, Size, VideoSrc } from './types'\nimport {\n  getCropSize,\n  restrictPosition,\n  getDistanceBetweenPoints,\n  getRotationBetweenPoints,\n  computeCroppedArea,\n  getCenter,\n  getInitialCropFromCroppedAreaPixels,\n  getInitialCropFromCroppedAreaPercentages,\n  classNames,\n  clamp,\n} from './helpers'\nimport cssStyles from './styles.css'\n\nexport type CropperProps = {\n  image?: string\n  video?: string | VideoSrc[]\n  transform?: string\n  crop: Point\n  zoom: number\n  rotation: number\n  aspect: number\n  minZoom: number\n  maxZoom: number\n  cropShape: 'rect' | 'round'\n  cropSize?: Size\n  objectFit?: 'contain' | 'horizontal-cover' | 'vertical-cover' | 'auto-cover'\n  showGrid?: boolean\n  zoomSpeed: number\n  zoomWithScroll?: boolean\n  onCropChange: (location: Point) => void\n  onZoomChange?: (zoom: number) => void\n  onRotationChange?: (rotation: number) => void\n  onCropComplete?: (croppedArea: Area, croppedAreaPixels: Area) => void\n  onCropAreaChange?: (croppedArea: Area, croppedAreaPixels: Area) => void\n  onCropSizeChange?: (cropSize: Size) => void\n  onInteractionStart?: () => void\n  onInteractionEnd?: () => void\n  onMediaLoaded?: (mediaSize: MediaSize) => void\n  style: {\n    containerStyle?: React.CSSProperties\n    mediaStyle?: React.CSSProperties\n    cropAreaStyle?: React.CSSProperties\n  }\n  classes: {\n    containerClassName?: string\n    mediaClassName?: string\n    cropAreaClassName?: string\n  }\n  restrictPosition: boolean\n  mediaProps: React.ImgHTMLAttributes<HTMLElement> | React.VideoHTMLAttributes<HTMLElement>\n  disableAutomaticStylesInjection?: boolean\n  initialCroppedAreaPixels?: Area\n  initialCroppedAreaPercentages?: Area\n  onTouchRequest?: (e: React.TouchEvent<HTMLDivElement>) => boolean\n  onWheelRequest?: (e: WheelEvent) => boolean\n  setImageRef?: (ref: React.RefObject<HTMLImageElement>) => void\n  setVideoRef?: (ref: React.RefObject<HTMLVideoElement>) => void\n  setMediaSize?: (size: MediaSize) => void\n  setCropSize?: (size: Size) => void\n  nonce?: string\n}\n\ntype State = {\n  cropSize: Size | null\n  hasWheelJustStarted: boolean\n}\n\nconst MIN_ZOOM = 1\nconst MAX_ZOOM = 3\n\ntype GestureEvent = UIEvent & {\n  rotation: number\n  scale: number\n  clientX: number\n  clientY: number\n}\n\nclass Cropper extends React.Component<CropperProps, State> {\n  static defaultProps = {\n    zoom: 1,\n    rotation: 0,\n    aspect: 4 / 3,\n    maxZoom: MAX_ZOOM,\n    minZoom: MIN_ZOOM,\n    cropShape: 'rect' as const,\n    objectFit: 'contain' as const,\n    showGrid: true,\n    style: {},\n    classes: {},\n    mediaProps: {},\n    zoomSpeed: 1,\n    restrictPosition: true,\n    zoomWithScroll: true,\n  }\n\n  imageRef: React.RefObject<HTMLImageElement> = React.createRef()\n  videoRef: React.RefObject<HTMLVideoElement> = React.createRef()\n  containerRef: HTMLDivElement | null = null\n  styleRef: HTMLStyleElement | null = null\n  containerRect: DOMRect | null = null\n  mediaSize: MediaSize = { width: 0, height: 0, naturalWidth: 0, naturalHeight: 0 }\n  dragStartPosition: Point = { x: 0, y: 0 }\n  dragStartCrop: Point = { x: 0, y: 0 }\n  gestureZoomStart = 0\n  gestureRotationStart = 0\n  isTouching = false\n  lastPinchDistance = 0\n  lastPinchRotation = 0\n  rafDragTimeout: number | null = null\n  rafPinchTimeout: number | null = null\n  wheelTimer: number | null = null\n  currentDoc: Document = document\n  currentWindow: Window = window\n\n  state: State = {\n    cropSize: null,\n    hasWheelJustStarted: false,\n  }\n\n  componentDidMount() {\n    if (this.containerRef) {\n      if (this.containerRef.ownerDocument) {\n        this.currentDoc = this.containerRef.ownerDocument\n      }\n      if (this.currentDoc.defaultView) {\n        this.currentWindow = this.currentDoc.defaultView\n      }\n      this.currentWindow.addEventListener('resize', this.computeSizes)\n      this.props.zoomWithScroll &&\n        this.containerRef.addEventListener('wheel', this.onWheel, { passive: false })\n      this.containerRef.addEventListener('gesturestart', this.onGestureStart as EventListener)\n    }\n\n    if (!this.props.disableAutomaticStylesInjection) {\n      this.styleRef = this.currentDoc.createElement('style')\n      this.styleRef.setAttribute('type', 'text/css')\n      if (this.props.nonce) {\n        this.styleRef.setAttribute('nonce', this.props.nonce)\n      }\n      this.styleRef.innerHTML = cssStyles\n      this.currentDoc.head.appendChild(this.styleRef)\n    }\n\n    // when rendered via SSR, the image can already be loaded and its onLoad callback will never be called\n    if (this.imageRef.current && this.imageRef.current.complete) {\n      this.onMediaLoad()\n    }\n\n    // set image and video refs in the parent if the callbacks exist\n    if (this.props.setImageRef) {\n      this.props.setImageRef(this.imageRef)\n    }\n\n    if (this.props.setVideoRef) {\n      this.props.setVideoRef(this.videoRef)\n    }\n  }\n\n  componentWillUnmount() {\n    this.currentWindow.removeEventListener('resize', this.computeSizes)\n    if (this.containerRef) {\n      this.containerRef.removeEventListener('gesturestart', this.preventZoomSafari)\n    }\n\n    if (this.styleRef) {\n      this.styleRef.parentNode?.removeChild(this.styleRef)\n    }\n\n    this.cleanEvents()\n    this.props.zoomWithScroll && this.clearScrollEvent()\n  }\n\n  componentDidUpdate(prevProps: CropperProps) {\n    if (prevProps.rotation !== this.props.rotation) {\n      this.computeSizes()\n      this.recomputeCropPosition()\n    } else if (prevProps.aspect !== this.props.aspect) {\n      this.computeSizes()\n    } else if (prevProps.zoom !== this.props.zoom) {\n      this.recomputeCropPosition()\n    } else if (\n      prevProps.cropSize?.height !== this.props.cropSize?.height ||\n      prevProps.cropSize?.width !== this.props.cropSize?.width\n    ) {\n      this.computeSizes()\n    } else if (\n      prevProps.crop?.x !== this.props.crop?.x ||\n      prevProps.crop?.y !== this.props.crop?.y\n    ) {\n      this.emitCropAreaChange()\n    }\n    if (prevProps.zoomWithScroll !== this.props.zoomWithScroll && this.containerRef) {\n      this.props.zoomWithScroll\n        ? this.containerRef.addEventListener('wheel', this.onWheel, { passive: false })\n        : this.clearScrollEvent()\n    }\n    if (prevProps.video !== this.props.video) {\n      this.videoRef.current?.load()\n    }\n  }\n\n  // this is to prevent Safari on iOS >= 10 to zoom the page\n  preventZoomSafari = (e: Event) => e.preventDefault()\n\n  cleanEvents = () => {\n    this.currentDoc.removeEventListener('mousemove', this.onMouseMove)\n    this.currentDoc.removeEventListener('mouseup', this.onDragStopped)\n    this.currentDoc.removeEventListener('touchmove', this.onTouchMove)\n    this.currentDoc.removeEventListener('touchend', this.onDragStopped)\n    this.currentDoc.removeEventListener('gesturemove', this.onGestureMove as EventListener)\n    this.currentDoc.removeEventListener('gestureend', this.onGestureEnd as EventListener)\n  }\n\n  clearScrollEvent = () => {\n    if (this.containerRef) this.containerRef.removeEventListener('wheel', this.onWheel)\n    if (this.wheelTimer) {\n      clearTimeout(this.wheelTimer)\n    }\n  }\n\n  onMediaLoad = () => {\n    const cropSize = this.computeSizes()\n\n    if (cropSize) {\n      this.emitCropData()\n      this.setInitialCrop(cropSize)\n    }\n\n    if (this.props.onMediaLoaded) {\n      this.props.onMediaLoaded(this.mediaSize)\n    }\n  }\n\n  setInitialCrop = (cropSize: Size) => {\n    if (this.props.initialCroppedAreaPercentages) {\n      const { crop, zoom } = getInitialCropFromCroppedAreaPercentages(\n        this.props.initialCroppedAreaPercentages,\n        this.mediaSize,\n        this.props.rotation,\n        cropSize,\n        this.props.minZoom,\n        this.props.maxZoom\n      )\n\n      this.props.onCropChange(crop)\n      this.props.onZoomChange && this.props.onZoomChange(zoom)\n    } else if (this.props.initialCroppedAreaPixels) {\n      const { crop, zoom } = getInitialCropFromCroppedAreaPixels(\n        this.props.initialCroppedAreaPixels,\n        this.mediaSize,\n        this.props.rotation,\n        cropSize,\n        this.props.minZoom,\n        this.props.maxZoom\n      )\n\n      this.props.onCropChange(crop)\n      this.props.onZoomChange && this.props.onZoomChange(zoom)\n    }\n  }\n\n  getAspect() {\n    const { cropSize, aspect } = this.props\n    if (cropSize) {\n      return cropSize.width / cropSize.height\n    }\n    return aspect\n  }\n\n  computeSizes = () => {\n    const mediaRef = this.imageRef.current || this.videoRef.current\n\n    if (mediaRef && this.containerRef) {\n      this.containerRect = this.containerRef.getBoundingClientRect()\n      const containerAspect = this.containerRect.width / this.containerRect.height\n      const naturalWidth =\n        this.imageRef.current?.naturalWidth || this.videoRef.current?.videoWidth || 0\n      const naturalHeight =\n        this.imageRef.current?.naturalHeight || this.videoRef.current?.videoHeight || 0\n      const isMediaScaledDown =\n        mediaRef.offsetWidth < naturalWidth || mediaRef.offsetHeight < naturalHeight\n      const mediaAspect = naturalWidth / naturalHeight\n\n      // We do not rely on the offsetWidth/offsetHeight if the media is scaled down\n      // as the values they report are rounded. That will result in precision losses\n      // when calculating zoom. We use the fact that the media is positionned relative\n      // to the container. That allows us to use the container's dimensions\n      // and natural aspect ratio of the media to calculate accurate media size.\n      // However, for this to work, the container should not be rotated\n      let renderedMediaSize: Size\n\n      if (isMediaScaledDown) {\n        switch (this.props.objectFit) {\n          default:\n          case 'contain':\n            renderedMediaSize =\n              containerAspect > mediaAspect\n                ? {\n                    width: this.containerRect.height * mediaAspect,\n                    height: this.containerRect.height,\n                  }\n                : {\n                    width: this.containerRect.width,\n                    height: this.containerRect.width / mediaAspect,\n                  }\n            break\n          case 'horizontal-cover':\n            renderedMediaSize = {\n              width: this.containerRect.width,\n              height: this.containerRect.width / mediaAspect,\n            }\n            break\n          case 'vertical-cover':\n            renderedMediaSize = {\n              width: this.containerRect.height * mediaAspect,\n              height: this.containerRect.height,\n            }\n            break\n          case 'auto-cover':\n            renderedMediaSize =\n              naturalWidth > naturalHeight\n                ? {\n                    width: this.containerRect.width,\n                    height: this.containerRect.width / mediaAspect,\n                  }\n                : {\n                    width: this.containerRect.height * mediaAspect,\n                    height: this.containerRect.height,\n                  }\n            break\n        }\n      } else {\n        renderedMediaSize = {\n          width: mediaRef.offsetWidth,\n          height: mediaRef.offsetHeight,\n        }\n      }\n\n      this.mediaSize = {\n        ...renderedMediaSize,\n        naturalWidth,\n        naturalHeight,\n      }\n\n      // set media size in the parent\n      if (this.props.setMediaSize) {\n        this.props.setMediaSize(this.mediaSize)\n      }\n\n      const cropSize = this.props.cropSize\n        ? this.props.cropSize\n        : getCropSize(\n            this.mediaSize.width,\n            this.mediaSize.height,\n            this.containerRect.width,\n            this.containerRect.height,\n            this.props.aspect,\n            this.props.rotation\n          )\n\n      if (\n        this.state.cropSize?.height !== cropSize.height ||\n        this.state.cropSize?.width !== cropSize.width\n      ) {\n        this.props.onCropSizeChange && this.props.onCropSizeChange(cropSize)\n      }\n      this.setState({ cropSize }, this.recomputeCropPosition)\n      // pass crop size to parent\n      if (this.props.setCropSize) {\n        this.props.setCropSize(cropSize)\n      }\n\n      return cropSize\n    }\n  }\n\n  static getMousePoint = (e: MouseEvent | React.MouseEvent | GestureEvent) => ({\n    x: Number(e.clientX),\n    y: Number(e.clientY),\n  })\n\n  static getTouchPoint = (touch: Touch | React.Touch) => ({\n    x: Number(touch.clientX),\n    y: Number(touch.clientY),\n  })\n\n  onMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    e.preventDefault()\n    this.currentDoc.addEventListener('mousemove', this.onMouseMove)\n    this.currentDoc.addEventListener('mouseup', this.onDragStopped)\n    this.onDragStart(Cropper.getMousePoint(e))\n  }\n\n  onMouseMove = (e: MouseEvent) => this.onDrag(Cropper.getMousePoint(e))\n\n  onTouchStart = (e: React.TouchEvent<HTMLDivElement>) => {\n    this.isTouching = true\n    if (this.props.onTouchRequest && !this.props.onTouchRequest(e)) {\n      return\n    }\n\n    this.currentDoc.addEventListener('touchmove', this.onTouchMove, { passive: false }) // iOS 11 now defaults to passive: true\n    this.currentDoc.addEventListener('touchend', this.onDragStopped)\n\n    if (e.touches.length === 2) {\n      this.onPinchStart(e)\n    } else if (e.touches.length === 1) {\n      this.onDragStart(Cropper.getTouchPoint(e.touches[0]))\n    }\n  }\n\n  onTouchMove = (e: TouchEvent) => {\n    // Prevent whole page from scrolling on iOS.\n    e.preventDefault()\n    if (e.touches.length === 2) {\n      this.onPinchMove(e)\n    } else if (e.touches.length === 1) {\n      this.onDrag(Cropper.getTouchPoint(e.touches[0]))\n    }\n  }\n\n  onGestureStart = (e: GestureEvent) => {\n    e.preventDefault()\n    this.currentDoc.addEventListener('gesturechange', this.onGestureMove as EventListener)\n    this.currentDoc.addEventListener('gestureend', this.onGestureEnd as EventListener)\n    this.gestureZoomStart = this.props.zoom\n    this.gestureRotationStart = this.props.rotation\n  }\n\n  onGestureMove = (e: GestureEvent) => {\n    e.preventDefault()\n    if (this.isTouching) {\n      // this is to avoid conflict between gesture and touch events\n      return\n    }\n\n    const point = Cropper.getMousePoint(e)\n    const newZoom = this.gestureZoomStart - 1 + e.scale\n    this.setNewZoom(newZoom, point, { shouldUpdatePosition: true })\n    if (this.props.onRotationChange) {\n      const newRotation = this.gestureRotationStart + e.rotation\n      this.props.onRotationChange(newRotation)\n    }\n  }\n\n  onGestureEnd = (e: GestureEvent) => {\n    this.cleanEvents()\n  }\n\n  onDragStart = ({ x, y }: Point) => {\n    this.dragStartPosition = { x, y }\n    this.dragStartCrop = { ...this.props.crop }\n    this.props.onInteractionStart?.()\n  }\n\n  onDrag = ({ x, y }: Point) => {\n    if (this.rafDragTimeout) this.currentWindow.cancelAnimationFrame(this.rafDragTimeout)\n\n    this.rafDragTimeout = this.currentWindow.requestAnimationFrame(() => {\n      if (!this.state.cropSize) return\n      if (x === undefined || y === undefined) return\n      const offsetX = x - this.dragStartPosition.x\n      const offsetY = y - this.dragStartPosition.y\n      const requestedPosition = {\n        x: this.dragStartCrop.x + offsetX,\n        y: this.dragStartCrop.y + offsetY,\n      }\n\n      const newPosition = this.props.restrictPosition\n        ? restrictPosition(\n            requestedPosition,\n            this.mediaSize,\n            this.state.cropSize,\n            this.props.zoom,\n            this.props.rotation\n          )\n        : requestedPosition\n      this.props.onCropChange(newPosition)\n    })\n  }\n\n  onDragStopped = () => {\n    this.isTouching = false\n    this.cleanEvents()\n    this.emitCropData()\n    this.props.onInteractionEnd?.()\n  }\n\n  onPinchStart(e: React.TouchEvent<HTMLDivElement>) {\n    const pointA = Cropper.getTouchPoint(e.touches[0])\n    const pointB = Cropper.getTouchPoint(e.touches[1])\n    this.lastPinchDistance = getDistanceBetweenPoints(pointA, pointB)\n    this.lastPinchRotation = getRotationBetweenPoints(pointA, pointB)\n    this.onDragStart(getCenter(pointA, pointB))\n  }\n\n  onPinchMove(e: TouchEvent) {\n    const pointA = Cropper.getTouchPoint(e.touches[0])\n    const pointB = Cropper.getTouchPoint(e.touches[1])\n    const center = getCenter(pointA, pointB)\n    this.onDrag(center)\n\n    if (this.rafPinchTimeout) this.currentWindow.cancelAnimationFrame(this.rafPinchTimeout)\n    this.rafPinchTimeout = this.currentWindow.requestAnimationFrame(() => {\n      const distance = getDistanceBetweenPoints(pointA, pointB)\n      const newZoom = this.props.zoom * (distance / this.lastPinchDistance)\n      this.setNewZoom(newZoom, center, { shouldUpdatePosition: false })\n      this.lastPinchDistance = distance\n\n      const rotation = getRotationBetweenPoints(pointA, pointB)\n      const newRotation = this.props.rotation + (rotation - this.lastPinchRotation)\n      this.props.onRotationChange && this.props.onRotationChange(newRotation)\n      this.lastPinchRotation = rotation\n    })\n  }\n\n  onWheel = (e: WheelEvent) => {\n    if (this.props.onWheelRequest && !this.props.onWheelRequest(e)) {\n      return\n    }\n\n    e.preventDefault()\n    const point = Cropper.getMousePoint(e)\n    const { pixelY } = normalizeWheel(e)\n    const newZoom = this.props.zoom - (pixelY * this.props.zoomSpeed) / 200\n    this.setNewZoom(newZoom, point, { shouldUpdatePosition: true })\n\n    if (!this.state.hasWheelJustStarted) {\n      this.setState({ hasWheelJustStarted: true }, () => this.props.onInteractionStart?.())\n    }\n\n    if (this.wheelTimer) {\n      clearTimeout(this.wheelTimer)\n    }\n    this.wheelTimer = this.currentWindow.setTimeout(\n      () => this.setState({ hasWheelJustStarted: false }, () => this.props.onInteractionEnd?.()),\n      250\n    )\n  }\n\n  getPointOnContainer = ({ x, y }: Point) => {\n    if (!this.containerRect) {\n      throw new Error('The Cropper is not mounted')\n    }\n    return {\n      x: this.containerRect.width / 2 - (x - this.containerRect.left),\n      y: this.containerRect.height / 2 - (y - this.containerRect.top),\n    }\n  }\n\n  getPointOnMedia = ({ x, y }: Point) => {\n    const { crop, zoom } = this.props\n    return {\n      x: (x + crop.x) / zoom,\n      y: (y + crop.y) / zoom,\n    }\n  }\n\n  setNewZoom = (zoom: number, point: Point, { shouldUpdatePosition = true } = {}) => {\n    if (!this.state.cropSize || !this.props.onZoomChange) return\n\n    const newZoom = clamp(zoom, this.props.minZoom, this.props.maxZoom)\n\n    if (shouldUpdatePosition) {\n      const zoomPoint = this.getPointOnContainer(point)\n      const zoomTarget = this.getPointOnMedia(zoomPoint)\n      const requestedPosition = {\n        x: zoomTarget.x * newZoom - zoomPoint.x,\n        y: zoomTarget.y * newZoom - zoomPoint.y,\n      }\n\n      const newPosition = this.props.restrictPosition\n        ? restrictPosition(\n            requestedPosition,\n            this.mediaSize,\n            this.state.cropSize,\n            newZoom,\n            this.props.rotation\n          )\n        : requestedPosition\n\n      this.props.onCropChange(newPosition)\n    }\n    this.props.onZoomChange(newZoom)\n  }\n\n  getCropData = () => {\n    if (!this.state.cropSize) {\n      return null\n    }\n\n    // this is to ensure the crop is correctly restricted after a zoom back (https://github.com/ValentinH/react-easy-crop/issues/6)\n    const restrictedPosition = this.props.restrictPosition\n      ? restrictPosition(\n          this.props.crop,\n          this.mediaSize,\n          this.state.cropSize,\n          this.props.zoom,\n          this.props.rotation\n        )\n      : this.props.crop\n    return computeCroppedArea(\n      restrictedPosition,\n      this.mediaSize,\n      this.state.cropSize,\n      this.getAspect(),\n      this.props.zoom,\n      this.props.rotation,\n      this.props.restrictPosition\n    )\n  }\n\n  emitCropData = () => {\n    const cropData = this.getCropData()\n    if (!cropData) return\n\n    const { croppedAreaPercentages, croppedAreaPixels } = cropData\n    if (this.props.onCropComplete) {\n      this.props.onCropComplete(croppedAreaPercentages, croppedAreaPixels)\n    }\n\n    if (this.props.onCropAreaChange) {\n      this.props.onCropAreaChange(croppedAreaPercentages, croppedAreaPixels)\n    }\n  }\n\n  emitCropAreaChange = () => {\n    const cropData = this.getCropData()\n    if (!cropData) return\n\n    const { croppedAreaPercentages, croppedAreaPixels } = cropData\n    if (this.props.onCropAreaChange) {\n      this.props.onCropAreaChange(croppedAreaPercentages, croppedAreaPixels)\n    }\n  }\n\n  recomputeCropPosition = () => {\n    if (!this.state.cropSize) return\n\n    const newPosition = this.props.restrictPosition\n      ? restrictPosition(\n          this.props.crop,\n          this.mediaSize,\n          this.state.cropSize,\n          this.props.zoom,\n          this.props.rotation\n        )\n      : this.props.crop\n\n    this.props.onCropChange(newPosition)\n    this.emitCropData()\n  }\n\n  render() {\n    const {\n      image,\n      video,\n      mediaProps,\n      transform,\n      crop: { x, y },\n      rotation,\n      zoom,\n      cropShape,\n      showGrid,\n      style: { containerStyle, cropAreaStyle, mediaStyle },\n      classes: { containerClassName, cropAreaClassName, mediaClassName },\n      objectFit,\n    } = this.props\n\n    return (\n      <div\n        onMouseDown={this.onMouseDown}\n        onTouchStart={this.onTouchStart}\n        ref={(el) => (this.containerRef = el)}\n        data-testid=\"container\"\n        style={containerStyle}\n        className={classNames('reactEasyCrop_Container', containerClassName)}\n      >\n        {image ? (\n          <img\n            alt=\"\"\n            className={classNames(\n              'reactEasyCrop_Image',\n              objectFit === 'contain' && 'reactEasyCrop_Contain',\n              objectFit === 'horizontal-cover' && 'reactEasyCrop_Cover_Horizontal',\n              objectFit === 'vertical-cover' && 'reactEasyCrop_Cover_Vertical',\n              objectFit === 'auto-cover' &&\n                (this.mediaSize.naturalWidth > this.mediaSize.naturalHeight\n                  ? 'reactEasyCrop_Cover_Horizontal'\n                  : 'reactEasyCrop_Cover_Vertical'),\n              mediaClassName\n            )}\n            {...(mediaProps as React.ImgHTMLAttributes<HTMLElement>)}\n            src={image}\n            ref={this.imageRef}\n            style={{\n              ...mediaStyle,\n              transform:\n                transform || `translate(${x}px, ${y}px) rotate(${rotation}deg) scale(${zoom})`,\n            }}\n            onLoad={this.onMediaLoad}\n          />\n        ) : (\n          video && (\n            <video\n              autoPlay\n              loop\n              muted={true}\n              className={classNames(\n                'reactEasyCrop_Video',\n                objectFit === 'contain' && 'reactEasyCrop_Contain',\n                objectFit === 'horizontal-cover' && 'reactEasyCrop_Cover_Horizontal',\n                objectFit === 'vertical-cover' && 'reactEasyCrop_Cover_Vertical',\n                objectFit === 'auto-cover' &&\n                  (this.mediaSize.naturalWidth > this.mediaSize.naturalHeight\n                    ? 'reactEasyCrop_Cover_Horizontal'\n                    : 'reactEasyCrop_Cover_Vertical'),\n                mediaClassName\n              )}\n              {...mediaProps}\n              ref={this.videoRef}\n              onLoadedMetadata={this.onMediaLoad}\n              style={{\n                ...mediaStyle,\n                transform:\n                  transform || `translate(${x}px, ${y}px) rotate(${rotation}deg) scale(${zoom})`,\n              }}\n              controls={false}\n            >\n              {(Array.isArray(video) ? video : [{ src: video }]).map((item) => (\n                <source key={item.src} {...item} />\n              ))}\n            </video>\n          )\n        )}\n        {this.state.cropSize && (\n          <div\n            style={{\n              ...cropAreaStyle,\n              width: this.state.cropSize.width,\n              height: this.state.cropSize.height,\n            }}\n            data-testid=\"cropper\"\n            className={classNames(\n              'reactEasyCrop_CropArea',\n              cropShape === 'round' && 'reactEasyCrop_CropAreaRound',\n              showGrid && 'reactEasyCrop_CropAreaGrid',\n              cropAreaClassName\n            )}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Cropper\n"],"names":["getCropSize","mediaWidth","mediaHeight","containerWidth","containerHeight","aspect","rotation","_a","rotateSize","width","height","fittingWidth","Math","min","fittingHeight","getMediaZoom","mediaSize","naturalWidth","naturalHeight","restrictPosition","position","cropSize","zoom","x","restrictPositionCoord","y","maxPosition","clamp","getDistanceBetweenPoints","pointA","pointB","sqrt","pow","getRotationBetweenPoints","atan2","PI","computeCroppedArea","crop","limitAreaFn","limitArea","noOp","mediaBBoxSize","mediaNaturalBBoxSize","croppedAreaPercentages","widthInPixels","round","heightInPixels","isImgWiderThanHigh","sizePixels","croppedAreaPixels","max","value","_max","getInitialCropFromCroppedAreaPercentages","minZoom","maxZoom","getZoomFromCroppedAreaPixels","mediaZoom","getInitialCropFromCroppedAreaPixels","cropZoom","getCenter","a","b","getRadianAngle","degreeValue","rotRad","abs","cos","sin","classNames","_i","args","filter","length","join","trim","MIN_ZOOM","MAX_ZOOM","__extends","_this","React","createRef","document","window","hasWheelJustStarted","e","preventDefault","currentDoc","removeEventListener","onMouseMove","onDragStopped","onTouchMove","onGestureMove","onGestureEnd","containerRef","onWheel","wheelTimer","clearTimeout","computeSizes","emitCropData","setInitialCrop","props","onMediaLoaded","initialCroppedAreaPercentages","onCropChange","onZoomChange","initialCroppedAreaPixels","_b","mediaRef","imageRef","current","videoRef","containerRect","getBoundingClientRect","containerAspect","videoWidth","videoHeight","isMediaScaledDown","offsetWidth","offsetHeight","mediaAspect","renderedMediaSize","objectFit","setMediaSize","state","onCropSizeChange","setState","recomputeCropPosition","setCropSize","addEventListener","onDragStart","Cropper","getMousePoint","onDrag","isTouching","onTouchRequest","passive","touches","onPinchStart","getTouchPoint","onPinchMove","gestureZoomStart","gestureRotationStart","point","newZoom","scale","setNewZoom","shouldUpdatePosition","onRotationChange","newRotation","cleanEvents","dragStartPosition","dragStartCrop","onInteractionStart","rafDragTimeout","currentWindow","cancelAnimationFrame","requestAnimationFrame","undefined","offsetX","offsetY","requestedPosition","newPosition","onInteractionEnd","onWheelRequest","pixelY","normalizeWheel","zoomSpeed","setTimeout","Error","left","top","zoomPoint","getPointOnContainer","zoomTarget","getPointOnMedia","restrictedPosition","getAspect","cropData","getCropData","onCropComplete","onCropAreaChange","ownerDocument","defaultView","zoomWithScroll","onGestureStart","disableAutomaticStylesInjection","styleRef","createElement","setAttribute","nonce","innerHTML","cssStyles","head","appendChild","complete","onMediaLoad","setImageRef","setVideoRef","preventZoomSafari","parentNode","removeChild","clearScrollEvent","prevProps","emitCropAreaChange","video","load","lastPinchDistance","lastPinchRotation","center","rafPinchTimeout","distance","image","mediaProps","transform","cropShape","showGrid","_c","containerStyle","cropAreaStyle","mediaStyle","_d","containerClassName","cropAreaClassName","mediaClassName","onMouseDown","onTouchStart","ref","el","style","className","alt","src","onLoad","autoPlay","loop","muted","onLoadedMetadata","controls","Array","isArray","map","item","key","classes","Number","clientX","clientY","touch","Component"],"mappings":"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"}