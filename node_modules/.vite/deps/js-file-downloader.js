import {
  __commonJS
} from "./chunk-J43GMYXM.js";

// node_modules/js-file-downloader/dist/js-file-downloader.js
var require_js_file_downloader = __commonJS({
  "node_modules/js-file-downloader/dist/js-file-downloader.js"(exports, module) {
    (function webpackUniversalModuleDefinition(root, factory) {
      if (typeof exports === "object" && typeof module === "object")
        module.exports = factory();
      else if (typeof define === "function" && define.amd)
        define([], factory);
      else if (typeof exports === "object")
        exports["jsFileDownloader"] = factory();
      else
        root["jsFileDownloader"] = factory();
    })(exports, function() {
      return function(modules) {
        var installedModules = {};
        function __webpack_require__(moduleId) {
          if (installedModules[moduleId]) {
            return installedModules[moduleId].exports;
          }
          var module2 = installedModules[moduleId] = {
            i: moduleId,
            l: false,
            exports: {}
          };
          modules[moduleId].call(module2.exports, module2, module2.exports, __webpack_require__);
          module2.l = true;
          return module2.exports;
        }
        __webpack_require__.m = modules;
        __webpack_require__.c = installedModules;
        __webpack_require__.d = function(exports2, name, getter) {
          if (!__webpack_require__.o(exports2, name)) {
            Object.defineProperty(exports2, name, { enumerable: true, get: getter });
          }
        };
        __webpack_require__.r = function(exports2) {
          if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
            Object.defineProperty(exports2, Symbol.toStringTag, { value: "Module" });
          }
          Object.defineProperty(exports2, "__esModule", { value: true });
        };
        __webpack_require__.t = function(value, mode) {
          if (mode & 1)
            value = __webpack_require__(value);
          if (mode & 8)
            return value;
          if (mode & 4 && typeof value === "object" && value && value.__esModule)
            return value;
          var ns = /* @__PURE__ */ Object.create(null);
          __webpack_require__.r(ns);
          Object.defineProperty(ns, "default", { enumerable: true, value });
          if (mode & 2 && typeof value != "string")
            for (var key in value)
              __webpack_require__.d(ns, key, function(key2) {
                return value[key2];
              }.bind(null, key));
          return ns;
        };
        __webpack_require__.n = function(module2) {
          var getter = module2 && module2.__esModule ? function getDefault() {
            return module2["default"];
          } : function getModuleExports() {
            return module2;
          };
          __webpack_require__.d(getter, "a", getter);
          return getter;
        };
        __webpack_require__.o = function(object, property) {
          return Object.prototype.hasOwnProperty.call(object, property);
        };
        __webpack_require__.p = "";
        return __webpack_require__(__webpack_require__.s = "./src/index.js");
      }({
        "./node_modules/@babel/runtime/regenerator/index.js": function(module2, exports2, __webpack_require__) {
          module2.exports = __webpack_require__("./node_modules/regenerator-runtime/runtime.js");
        },
        "./node_modules/regenerator-runtime/runtime.js": function(module2, exports2, __webpack_require__) {
          var runtime = function(exports3) {
            "use strict";
            var Op = Object.prototype;
            var hasOwn = Op.hasOwnProperty;
            var undefined2;
            var $Symbol = typeof Symbol === "function" ? Symbol : {};
            var iteratorSymbol = $Symbol.iterator || "@@iterator";
            var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
            var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
            function define2(obj, key, value) {
              Object.defineProperty(obj, key, {
                value,
                enumerable: true,
                configurable: true,
                writable: true
              });
              return obj[key];
            }
            try {
              define2({}, "");
            } catch (err) {
              define2 = function(obj, key, value) {
                return obj[key] = value;
              };
            }
            function wrap(innerFn, outerFn, self, tryLocsList) {
              var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
              var generator = Object.create(protoGenerator.prototype);
              var context = new Context(tryLocsList || []);
              generator._invoke = makeInvokeMethod(innerFn, self, context);
              return generator;
            }
            exports3.wrap = wrap;
            function tryCatch(fn, obj, arg) {
              try {
                return { type: "normal", arg: fn.call(obj, arg) };
              } catch (err) {
                return { type: "throw", arg: err };
              }
            }
            var GenStateSuspendedStart = "suspendedStart";
            var GenStateSuspendedYield = "suspendedYield";
            var GenStateExecuting = "executing";
            var GenStateCompleted = "completed";
            var ContinueSentinel = {};
            function Generator() {
            }
            function GeneratorFunction() {
            }
            function GeneratorFunctionPrototype() {
            }
            var IteratorPrototype = {};
            define2(IteratorPrototype, iteratorSymbol, function() {
              return this;
            });
            var getProto = Object.getPrototypeOf;
            var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
            if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
              IteratorPrototype = NativeIteratorPrototype;
            }
            var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
            GeneratorFunction.prototype = GeneratorFunctionPrototype;
            define2(Gp, "constructor", GeneratorFunctionPrototype);
            define2(GeneratorFunctionPrototype, "constructor", GeneratorFunction);
            GeneratorFunction.displayName = define2(
              GeneratorFunctionPrototype,
              toStringTagSymbol,
              "GeneratorFunction"
            );
            function defineIteratorMethods(prototype) {
              ["next", "throw", "return"].forEach(function(method) {
                define2(prototype, method, function(arg) {
                  return this._invoke(method, arg);
                });
              });
            }
            exports3.isGeneratorFunction = function(genFun) {
              var ctor = typeof genFun === "function" && genFun.constructor;
              return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
            };
            exports3.mark = function(genFun) {
              if (Object.setPrototypeOf) {
                Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
              } else {
                genFun.__proto__ = GeneratorFunctionPrototype;
                define2(genFun, toStringTagSymbol, "GeneratorFunction");
              }
              genFun.prototype = Object.create(Gp);
              return genFun;
            };
            exports3.awrap = function(arg) {
              return { __await: arg };
            };
            function AsyncIterator(generator, PromiseImpl) {
              function invoke(method, arg, resolve, reject) {
                var record = tryCatch(generator[method], generator, arg);
                if (record.type === "throw") {
                  reject(record.arg);
                } else {
                  var result = record.arg;
                  var value = result.value;
                  if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
                    return PromiseImpl.resolve(value.__await).then(function(value2) {
                      invoke("next", value2, resolve, reject);
                    }, function(err) {
                      invoke("throw", err, resolve, reject);
                    });
                  }
                  return PromiseImpl.resolve(value).then(function(unwrapped) {
                    result.value = unwrapped;
                    resolve(result);
                  }, function(error) {
                    return invoke("throw", error, resolve, reject);
                  });
                }
              }
              var previousPromise;
              function enqueue(method, arg) {
                function callInvokeWithMethodAndArg() {
                  return new PromiseImpl(function(resolve, reject) {
                    invoke(method, arg, resolve, reject);
                  });
                }
                return previousPromise = previousPromise ? previousPromise.then(
                  callInvokeWithMethodAndArg,
                  callInvokeWithMethodAndArg
                ) : callInvokeWithMethodAndArg();
              }
              this._invoke = enqueue;
            }
            defineIteratorMethods(AsyncIterator.prototype);
            define2(AsyncIterator.prototype, asyncIteratorSymbol, function() {
              return this;
            });
            exports3.AsyncIterator = AsyncIterator;
            exports3.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
              if (PromiseImpl === void 0)
                PromiseImpl = Promise;
              var iter = new AsyncIterator(
                wrap(innerFn, outerFn, self, tryLocsList),
                PromiseImpl
              );
              return exports3.isGeneratorFunction(outerFn) ? iter : iter.next().then(function(result) {
                return result.done ? result.value : iter.next();
              });
            };
            function makeInvokeMethod(innerFn, self, context) {
              var state = GenStateSuspendedStart;
              return function invoke(method, arg) {
                if (state === GenStateExecuting) {
                  throw new Error("Generator is already running");
                }
                if (state === GenStateCompleted) {
                  if (method === "throw") {
                    throw arg;
                  }
                  return doneResult();
                }
                context.method = method;
                context.arg = arg;
                while (true) {
                  var delegate = context.delegate;
                  if (delegate) {
                    var delegateResult = maybeInvokeDelegate(delegate, context);
                    if (delegateResult) {
                      if (delegateResult === ContinueSentinel)
                        continue;
                      return delegateResult;
                    }
                  }
                  if (context.method === "next") {
                    context.sent = context._sent = context.arg;
                  } else if (context.method === "throw") {
                    if (state === GenStateSuspendedStart) {
                      state = GenStateCompleted;
                      throw context.arg;
                    }
                    context.dispatchException(context.arg);
                  } else if (context.method === "return") {
                    context.abrupt("return", context.arg);
                  }
                  state = GenStateExecuting;
                  var record = tryCatch(innerFn, self, context);
                  if (record.type === "normal") {
                    state = context.done ? GenStateCompleted : GenStateSuspendedYield;
                    if (record.arg === ContinueSentinel) {
                      continue;
                    }
                    return {
                      value: record.arg,
                      done: context.done
                    };
                  } else if (record.type === "throw") {
                    state = GenStateCompleted;
                    context.method = "throw";
                    context.arg = record.arg;
                  }
                }
              };
            }
            function maybeInvokeDelegate(delegate, context) {
              var method = delegate.iterator[context.method];
              if (method === undefined2) {
                context.delegate = null;
                if (context.method === "throw") {
                  if (delegate.iterator["return"]) {
                    context.method = "return";
                    context.arg = undefined2;
                    maybeInvokeDelegate(delegate, context);
                    if (context.method === "throw") {
                      return ContinueSentinel;
                    }
                  }
                  context.method = "throw";
                  context.arg = new TypeError(
                    "The iterator does not provide a 'throw' method"
                  );
                }
                return ContinueSentinel;
              }
              var record = tryCatch(method, delegate.iterator, context.arg);
              if (record.type === "throw") {
                context.method = "throw";
                context.arg = record.arg;
                context.delegate = null;
                return ContinueSentinel;
              }
              var info = record.arg;
              if (!info) {
                context.method = "throw";
                context.arg = new TypeError("iterator result is not an object");
                context.delegate = null;
                return ContinueSentinel;
              }
              if (info.done) {
                context[delegate.resultName] = info.value;
                context.next = delegate.nextLoc;
                if (context.method !== "return") {
                  context.method = "next";
                  context.arg = undefined2;
                }
              } else {
                return info;
              }
              context.delegate = null;
              return ContinueSentinel;
            }
            defineIteratorMethods(Gp);
            define2(Gp, toStringTagSymbol, "Generator");
            define2(Gp, iteratorSymbol, function() {
              return this;
            });
            define2(Gp, "toString", function() {
              return "[object Generator]";
            });
            function pushTryEntry(locs) {
              var entry = { tryLoc: locs[0] };
              if (1 in locs) {
                entry.catchLoc = locs[1];
              }
              if (2 in locs) {
                entry.finallyLoc = locs[2];
                entry.afterLoc = locs[3];
              }
              this.tryEntries.push(entry);
            }
            function resetTryEntry(entry) {
              var record = entry.completion || {};
              record.type = "normal";
              delete record.arg;
              entry.completion = record;
            }
            function Context(tryLocsList) {
              this.tryEntries = [{ tryLoc: "root" }];
              tryLocsList.forEach(pushTryEntry, this);
              this.reset(true);
            }
            exports3.keys = function(object) {
              var keys = [];
              for (var key in object) {
                keys.push(key);
              }
              keys.reverse();
              return function next() {
                while (keys.length) {
                  var key2 = keys.pop();
                  if (key2 in object) {
                    next.value = key2;
                    next.done = false;
                    return next;
                  }
                }
                next.done = true;
                return next;
              };
            };
            function values(iterable) {
              if (iterable) {
                var iteratorMethod = iterable[iteratorSymbol];
                if (iteratorMethod) {
                  return iteratorMethod.call(iterable);
                }
                if (typeof iterable.next === "function") {
                  return iterable;
                }
                if (!isNaN(iterable.length)) {
                  var i = -1, next = function next2() {
                    while (++i < iterable.length) {
                      if (hasOwn.call(iterable, i)) {
                        next2.value = iterable[i];
                        next2.done = false;
                        return next2;
                      }
                    }
                    next2.value = undefined2;
                    next2.done = true;
                    return next2;
                  };
                  return next.next = next;
                }
              }
              return { next: doneResult };
            }
            exports3.values = values;
            function doneResult() {
              return { value: undefined2, done: true };
            }
            Context.prototype = {
              constructor: Context,
              reset: function(skipTempReset) {
                this.prev = 0;
                this.next = 0;
                this.sent = this._sent = undefined2;
                this.done = false;
                this.delegate = null;
                this.method = "next";
                this.arg = undefined2;
                this.tryEntries.forEach(resetTryEntry);
                if (!skipTempReset) {
                  for (var name in this) {
                    if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
                      this[name] = undefined2;
                    }
                  }
                }
              },
              stop: function() {
                this.done = true;
                var rootEntry = this.tryEntries[0];
                var rootRecord = rootEntry.completion;
                if (rootRecord.type === "throw") {
                  throw rootRecord.arg;
                }
                return this.rval;
              },
              dispatchException: function(exception) {
                if (this.done) {
                  throw exception;
                }
                var context = this;
                function handle(loc, caught) {
                  record.type = "throw";
                  record.arg = exception;
                  context.next = loc;
                  if (caught) {
                    context.method = "next";
                    context.arg = undefined2;
                  }
                  return !!caught;
                }
                for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                  var entry = this.tryEntries[i];
                  var record = entry.completion;
                  if (entry.tryLoc === "root") {
                    return handle("end");
                  }
                  if (entry.tryLoc <= this.prev) {
                    var hasCatch = hasOwn.call(entry, "catchLoc");
                    var hasFinally = hasOwn.call(entry, "finallyLoc");
                    if (hasCatch && hasFinally) {
                      if (this.prev < entry.catchLoc) {
                        return handle(entry.catchLoc, true);
                      } else if (this.prev < entry.finallyLoc) {
                        return handle(entry.finallyLoc);
                      }
                    } else if (hasCatch) {
                      if (this.prev < entry.catchLoc) {
                        return handle(entry.catchLoc, true);
                      }
                    } else if (hasFinally) {
                      if (this.prev < entry.finallyLoc) {
                        return handle(entry.finallyLoc);
                      }
                    } else {
                      throw new Error("try statement without catch or finally");
                    }
                  }
                }
              },
              abrupt: function(type, arg) {
                for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                  var entry = this.tryEntries[i];
                  if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
                    var finallyEntry = entry;
                    break;
                  }
                }
                if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
                  finallyEntry = null;
                }
                var record = finallyEntry ? finallyEntry.completion : {};
                record.type = type;
                record.arg = arg;
                if (finallyEntry) {
                  this.method = "next";
                  this.next = finallyEntry.finallyLoc;
                  return ContinueSentinel;
                }
                return this.complete(record);
              },
              complete: function(record, afterLoc) {
                if (record.type === "throw") {
                  throw record.arg;
                }
                if (record.type === "break" || record.type === "continue") {
                  this.next = record.arg;
                } else if (record.type === "return") {
                  this.rval = this.arg = record.arg;
                  this.method = "return";
                  this.next = "end";
                } else if (record.type === "normal" && afterLoc) {
                  this.next = afterLoc;
                }
                return ContinueSentinel;
              },
              finish: function(finallyLoc) {
                for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                  var entry = this.tryEntries[i];
                  if (entry.finallyLoc === finallyLoc) {
                    this.complete(entry.completion, entry.afterLoc);
                    resetTryEntry(entry);
                    return ContinueSentinel;
                  }
                }
              },
              "catch": function(tryLoc) {
                for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                  var entry = this.tryEntries[i];
                  if (entry.tryLoc === tryLoc) {
                    var record = entry.completion;
                    if (record.type === "throw") {
                      var thrown = record.arg;
                      resetTryEntry(entry);
                    }
                    return thrown;
                  }
                }
                throw new Error("illegal catch attempt");
              },
              delegateYield: function(iterable, resultName, nextLoc) {
                this.delegate = {
                  iterator: values(iterable),
                  resultName,
                  nextLoc
                };
                if (this.method === "next") {
                  this.arg = undefined2;
                }
                return ContinueSentinel;
              }
            };
            return exports3;
          }(
            true ? module2.exports : void 0
          );
          try {
            regeneratorRuntime = runtime;
          } catch (accidentalStrictMode) {
            if (typeof globalThis === "object") {
              globalThis.regeneratorRuntime = runtime;
            } else {
              Function("r", "regeneratorRuntime = r")(runtime);
            }
          }
        },
        "./src/exception.js": function(module2, __webpack_exports__, __webpack_require__) {
          "use strict";
          __webpack_require__.r(__webpack_exports__);
          __webpack_require__.d(__webpack_exports__, "DownloadException", function() {
            return DownloadException;
          });
          __webpack_require__.d(__webpack_exports__, "downloadException", function() {
            return downloadException;
          });
          function _typeof(obj) {
            "@babel/helpers - typeof";
            if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
              _typeof = function _typeof2(obj2) {
                return typeof obj2;
              };
            } else {
              _typeof = function _typeof2(obj2) {
                return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
              };
            }
            return _typeof(obj);
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function");
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
            if (superClass)
              _setPrototypeOf(subClass, superClass);
          }
          function _createSuper(Derived) {
            var hasNativeReflectConstruct = _isNativeReflectConstruct();
            return function _createSuperInternal() {
              var Super = _getPrototypeOf(Derived), result;
              if (hasNativeReflectConstruct) {
                var NewTarget = _getPrototypeOf(this).constructor;
                result = Reflect.construct(Super, arguments, NewTarget);
              } else {
                result = Super.apply(this, arguments);
              }
              return _possibleConstructorReturn(this, result);
            };
          }
          function _possibleConstructorReturn(self, call) {
            if (call && (_typeof(call) === "object" || typeof call === "function")) {
              return call;
            } else if (call !== void 0) {
              throw new TypeError("Derived constructors may only return object or undefined");
            }
            return _assertThisInitialized(self);
          }
          function _assertThisInitialized(self) {
            if (self === void 0) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return self;
          }
          function _wrapNativeSuper(Class) {
            var _cache = typeof Map === "function" ? /* @__PURE__ */ new Map() : void 0;
            _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
              if (Class2 === null || !_isNativeFunction(Class2))
                return Class2;
              if (typeof Class2 !== "function") {
                throw new TypeError("Super expression must either be null or a function");
              }
              if (typeof _cache !== "undefined") {
                if (_cache.has(Class2))
                  return _cache.get(Class2);
                _cache.set(Class2, Wrapper);
              }
              function Wrapper() {
                return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
              }
              Wrapper.prototype = Object.create(Class2.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } });
              return _setPrototypeOf(Wrapper, Class2);
            };
            return _wrapNativeSuper(Class);
          }
          function _construct(Parent, args, Class) {
            if (_isNativeReflectConstruct()) {
              _construct = Reflect.construct;
            } else {
              _construct = function _construct2(Parent2, args2, Class2) {
                var a = [null];
                a.push.apply(a, args2);
                var Constructor = Function.bind.apply(Parent2, a);
                var instance = new Constructor();
                if (Class2)
                  _setPrototypeOf(instance, Class2.prototype);
                return instance;
              };
            }
            return _construct.apply(null, arguments);
          }
          function _isNativeReflectConstruct() {
            if (typeof Reflect === "undefined" || !Reflect.construct)
              return false;
            if (Reflect.construct.sham)
              return false;
            if (typeof Proxy === "function")
              return true;
            try {
              Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              }));
              return true;
            } catch (e) {
              return false;
            }
          }
          function _isNativeFunction(fn) {
            return Function.toString.call(fn).indexOf("[native code]") !== -1;
          }
          function _setPrototypeOf(o, p) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
              o2.__proto__ = p2;
              return o2;
            };
            return _setPrototypeOf(o, p);
          }
          function _getPrototypeOf(o) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
              return o2.__proto__ || Object.getPrototypeOf(o2);
            };
            return _getPrototypeOf(o);
          }
          var DownloadException = function(_Error) {
            _inherits(DownloadException2, _Error);
            var _super = _createSuper(DownloadException2);
            function DownloadException2(message, request) {
              var _this;
              _classCallCheck(this, DownloadException2);
              _this = _super.call(this, "Downloader error: ".concat(message));
              _this.request = request;
              _this.name = "DownloadException";
              return _this;
            }
            return DownloadException2;
          }(_wrapNativeSuper(Error));
          ;
          var downloadException = DownloadException;
        },
        "./src/index.js": function(module2, __webpack_exports__, __webpack_require__) {
          "use strict";
          __webpack_require__.r(__webpack_exports__);
          var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@babel/runtime/regenerator/index.js");
          var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
          var _exception__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./src/exception.js");
          var _signatures__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./src/signatures.js");
          function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
            try {
              var info = gen[key](arg);
              var value = info.value;
            } catch (error) {
              reject(error);
              return;
            }
            if (info.done) {
              resolve(value);
            } else {
              Promise.resolve(value).then(_next, _throw);
            }
          }
          function _asyncToGenerator(fn) {
            return function() {
              var self = this, args = arguments;
              return new Promise(function(resolve, reject) {
                var gen = fn.apply(self, args);
                function _next(value) {
                  asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
                }
                function _throw(err) {
                  asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
                }
                _next(void 0);
              });
            };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor)
                descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          function _createClass(Constructor, protoProps, staticProps) {
            if (protoProps)
              _defineProperties(Constructor.prototype, protoProps);
            if (staticProps)
              _defineProperties(Constructor, staticProps);
            return Constructor;
          }
          var DEFAULT_PARAMS = {
            timeout: 4e4,
            headers: [],
            forceDesktopMode: false,
            autoStart: true,
            withCredentials: false,
            method: "GET",
            nameCallback: function nameCallback(name) {
              return name;
            },
            contentType: "application/x-www-form-urlencoded",
            body: null,
            nativeFallbackOnError: false,
            contentTypeDetermination: false
          };
          var JsFileDownloader = function() {
            function JsFileDownloader2() {
              var customParams = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              _classCallCheck(this, JsFileDownloader2);
              this.params = Object.assign({}, DEFAULT_PARAMS, customParams);
              this.link = this.createLink();
              this.request = null;
              this.downloadedFile = null;
              if (this.params.autoStart)
                return this.downloadFile();
              return this;
            }
            _createClass(JsFileDownloader2, [{
              key: "start",
              value: function start() {
                return this.downloadFile();
              }
            }, {
              key: "downloadFile",
              value: function downloadFile() {
                var _this = this;
                return new Promise(function(resolve, reject) {
                  _this.initDownload(resolve, reject);
                });
              }
            }, {
              key: "initDownload",
              value: function initDownload(resolve, reject) {
                var _this2 = this;
                var fallback = function fallback2() {
                  _this2.link.target = "_blank";
                  _this2.link.href = _this2.params.url;
                  _this2.clickLink();
                };
                if (!("download" in this.link) || this.isMobile()) {
                  fallback();
                  return resolve();
                }
                this.request = this.createRequest();
                if (!this.params.url) {
                  return reject(new _exception__WEBPACK_IMPORTED_MODULE_1__["DownloadException"]("url param not defined!", this.request));
                }
                this.request.onload = _asyncToGenerator(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
                    while (1) {
                      switch (_context.prev = _context.next) {
                        case 0:
                          if (!(parseInt(_this2.request.status, 10) !== 200)) {
                            _context.next = 2;
                            break;
                          }
                          return _context.abrupt("return", reject(new _exception__WEBPACK_IMPORTED_MODULE_1__["DownloadException"]("status code [".concat(_this2.request.status, "]"), _this2.request)));
                        case 2:
                          _context.next = 4;
                          return _this2.startDownload();
                        case 4:
                          return _context.abrupt("return", resolve(_this2));
                        case 5:
                        case "end":
                          return _context.stop();
                      }
                    }
                  }, _callee);
                }));
                this.request.ontimeout = function() {
                  reject(new _exception__WEBPACK_IMPORTED_MODULE_1__["DownloadException"]("request timeout", _this2.request));
                };
                this.request.onerror = function() {
                  if (_this2.params.nativeFallbackOnError) {
                    fallback();
                    resolve(_this2);
                  } else {
                    reject(new _exception__WEBPACK_IMPORTED_MODULE_1__["DownloadException"]("network error", _this2.request));
                  }
                };
                this.request.send(this.params.body);
                return this;
              }
            }, {
              key: "isMobile",
              value: function isMobile() {
                return !this.params.forceDesktopMode && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
              }
            }, {
              key: "createRequest",
              value: function createRequest() {
                var request = new XMLHttpRequest();
                request.open(this.params.method, this.params.url, true);
                if (this.params.contentType !== false) {
                  request.setRequestHeader("Content-type", this.params.contentType);
                }
                this.params.headers.forEach(function(header) {
                  request.setRequestHeader(header.name, header.value);
                });
                request.responseType = "arraybuffer";
                if (this.params.process && typeof this.params.process === "function") {
                  request.addEventListener("progress", this.params.process);
                }
                if (this.params.onloadstart && typeof this.params.onloadstart === "function") {
                  request.onloadstart = this.params.onloadstart;
                }
                request.timeout = this.params.timeout;
                request.withCredentials = !!this.params.withCredentials || !!this.params.includeCredentials;
                return request;
              }
            }, {
              key: "getFileName",
              value: function getFileName() {
                if (typeof this.params.filename === "string") {
                  return this.params.filename;
                }
                var content = this.request.getResponseHeader("Content-Disposition");
                var contentParts = [];
                if (content) {
                  contentParts = content.replace(/["']/g, "").match(/filename\*?=([^;]+)/);
                }
                var extractedName = contentParts && contentParts.length >= 1 ? contentParts[1] : this.params.url.split("/").pop().split("?")[0];
                return this.params.nameCallback(extractedName);
              }
            }, {
              key: "getContentTypeFromFileSignature",
              value: function getContentTypeFromFileSignature(file) {
                var signatures = Object.assign({}, _signatures__WEBPACK_IMPORTED_MODULE_2__["fileSignatures"], this.params.customFileSignatures);
                return new Promise(function(resolve, reject) {
                  var reader = new FileReader();
                  var first4BytesOfFile = file.slice(0, 4);
                  reader.onloadend = function(evt) {
                    if (evt.target.readyState !== FileReader.DONE) {
                      reject();
                      return;
                    }
                    var uint = new Uint8Array(evt.target.result);
                    var bytes = [];
                    uint.forEach(function(byte) {
                      bytes.push(byte.toString(16));
                    });
                    var hex = bytes.join("").toUpperCase();
                    resolve(signatures[hex]);
                  };
                  reader.onerror = reject;
                  reader.readAsArrayBuffer(first4BytesOfFile);
                });
              }
            }, {
              key: "getContentTypeFromResponseHeader",
              value: function getContentTypeFromResponseHeader() {
                return this.request.getResponseHeader("content-type");
              }
            }, {
              key: "getContentType",
              value: function getContentType(response) {
                var _this3 = this;
                return new Promise(function() {
                  var _ref2 = _asyncToGenerator(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(resolve) {
                    var contentTypeDetermination, defaultContentType, headerContentType, signatureContentType, _headerContentType, _signatureContentType, _ref3, _signatureContentType2;
                    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
                      while (1) {
                        switch (_context2.prev = _context2.next) {
                          case 0:
                            contentTypeDetermination = _this3.params.contentTypeDetermination;
                            defaultContentType = "application/octet-stream";
                            if (contentTypeDetermination === "header" || contentTypeDetermination === "full") {
                              headerContentType = _this3.getContentTypeFromResponseHeader();
                            }
                            if (!(contentTypeDetermination === "signature" || contentTypeDetermination === "full")) {
                              _context2.next = 7;
                              break;
                            }
                            _context2.next = 6;
                            return _this3.getContentTypeFromFileSignature(new Blob([response]));
                          case 6:
                            signatureContentType = _context2.sent;
                          case 7:
                            if (contentTypeDetermination === "header") {
                              resolve((_headerContentType = headerContentType) !== null && _headerContentType !== void 0 ? _headerContentType : defaultContentType);
                            } else if (contentTypeDetermination === "signature") {
                              resolve((_signatureContentType = signatureContentType) !== null && _signatureContentType !== void 0 ? _signatureContentType : defaultContentType);
                            } else if (contentTypeDetermination === "full") {
                              resolve((_ref3 = (_signatureContentType2 = signatureContentType) !== null && _signatureContentType2 !== void 0 ? _signatureContentType2 : headerContentType) !== null && _ref3 !== void 0 ? _ref3 : defaultContentType);
                            } else {
                              resolve(defaultContentType);
                            }
                          case 8:
                          case "end":
                            return _context2.stop();
                        }
                      }
                    }, _callee2);
                  }));
                  return function(_x) {
                    return _ref2.apply(this, arguments);
                  };
                }());
              }
            }, {
              key: "createLink",
              value: function createLink() {
                var link = document.createElement("a");
                link.style.display = "none";
                return link;
              }
            }, {
              key: "clickLink",
              value: function clickLink() {
                var event;
                try {
                  event = new MouseEvent("click");
                } catch (e) {
                  event = document.createEvent("MouseEvent");
                  event.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
                }
                this.link.dispatchEvent(event);
              }
            }, {
              key: "getFile",
              value: function() {
                var _getFile = _asyncToGenerator(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3(response, fileName) {
                  var type, file, options;
                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {
                    while (1) {
                      switch (_context3.prev = _context3.next) {
                        case 0:
                          _context3.next = 2;
                          return this.getContentType(response);
                        case 2:
                          type = _context3.sent;
                          options = {
                            type
                          };
                          try {
                            file = new File([response], fileName, options);
                          } catch (e) {
                            file = new Blob([response], options);
                            file.name = fileName;
                            file.lastModifiedDate = new Date();
                          }
                          return _context3.abrupt("return", file);
                        case 6:
                        case "end":
                          return _context3.stop();
                      }
                    }
                  }, _callee3, this);
                }));
                function getFile(_x2, _x3) {
                  return _getFile.apply(this, arguments);
                }
                return getFile;
              }()
            }, {
              key: "startDownload",
              value: function() {
                var _startDownload = _asyncToGenerator(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4() {
                  var fileName, objectUrl;
                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {
                    while (1) {
                      switch (_context4.prev = _context4.next) {
                        case 0:
                          fileName = this.getFileName();
                          _context4.next = 3;
                          return this.getFile(this.request.response, fileName);
                        case 3:
                          this.downloadedFile = _context4.sent;
                          if (!("msSaveOrOpenBlob" in window.navigator)) {
                            _context4.next = 6;
                            break;
                          }
                          return _context4.abrupt("return", window.navigator.msSaveOrOpenBlob(this.downloadedFile, fileName));
                        case 6:
                          objectUrl = window.URL.createObjectURL(this.downloadedFile);
                          this.link.href = objectUrl;
                          this.link.download = fileName;
                          this.clickLink();
                          setTimeout(function() {
                            (window.URL || window.webkitURL || window).revokeObjectURL(objectUrl);
                          }, 1e3 * 40);
                          return _context4.abrupt("return", this.downloadedFile);
                        case 12:
                        case "end":
                          return _context4.stop();
                      }
                    }
                  }, _callee4, this);
                }));
                function startDownload() {
                  return _startDownload.apply(this, arguments);
                }
                return startDownload;
              }()
            }]);
            return JsFileDownloader2;
          }();
          __webpack_exports__["default"] = JsFileDownloader;
        },
        "./src/signatures.js": function(module2, __webpack_exports__, __webpack_require__) {
          "use strict";
          __webpack_require__.r(__webpack_exports__);
          __webpack_require__.d(__webpack_exports__, "fileSignatures", function() {
            return fileSignatures;
          });
          var fileSignatures = {
            "89504E47": "image/png",
            "25504446": "application/pdf"
          };
        }
      })["default"];
    });
  }
});
export default require_js_file_downloader();
/*!
 * JS File Downloader v 1.1.24
 * https://github.com/AleeeKoi/js-file-downloader
 *
 * Copyright Alessandro Pellizzari
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 */
//# sourceMappingURL=js-file-downloader.js.map
